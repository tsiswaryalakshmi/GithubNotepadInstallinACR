#Build a Docker image and Push it to ACR
name: 'ACR'
on:
  push:
    branches:
    - main
  pull_request:

jobs:
  Windows-latest:
    runs-on: windows-latest
    environment: dev
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@main		  
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
      
    - name: AzureContainerLogin
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - run: |
        docker build . -t ${{ secrets.ACR_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/sampleapp:${{ github.sha }}

    - name: 'Deploy to Azure Container Instances'
      uses: 'azure/aci-deploy@v1'
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
        image: ${{ secrets.ACR_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
        registry-login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        registry-username: ${{ secrets.ACR_USERNAME }}
        registry-password: ${{ secrets.ACR_PASSWORD }}
        name: aci-sampleapp
        os-type: Windows
        location: 'East US'		
        command-line: 'powershell ping -t localhost'
